<?xml version="1.0" encoding="utf-8"?>
<mx:VBox xmlns:mx="http://www.adobe.com/2006/mxml"
	xmlns:utils="com.cubika.labs.utils.*"
	xmlns:cubikalabs="http://cubikalabs.cub2k.com/2009/commons"
	creationComplete="doInit()"
	paddingLeft="10" paddingTop="10" paddingRight="10"
	horizontalAlign="center" 
xmlns:addresses="view.address.external.*" 
xmlns:company="view.company.external.*" >

	
	<mx:Script>
		<![CDATA[
			
			import mx.binding.utils.BindingUtils;
			
			import com.cubika.labs.utils.MultipleRM;
			
			import event.DefaultNavigationEvent;
			import event.customer.CustomerCRUDEvent;
				
			import model.ApplicationModelLocator;
			import model.customer.CustomerModel;
				
			import mx.validators.Validator;

			import vo.customer.CustomerVO;	
			import vo.company.CompanyVO

			[Bindable]
			public var appModel:ApplicationModelLocator = ApplicationModelLocator.instance;
			
			[Bindable]
			private var _model:CustomerModel = ApplicationModelLocator.instance.customerModel;

				
			private function saveOrUpdate():void
			{
				if (validators.length >= 0 && Validator.validateAll(validators).length == 0)
				{
					var _vo:CustomerVO = _model.selected;	
					
					if (!_vo)
						_vo = new CustomerVO();				

					_vo.personalPhoto = fuPersonalPhoto.filePath;
					_vo.firstName = txtFirstName.text;
					_vo.lastName = txtLastName.text;
					_vo.email = txtEmail.text;
					_vo.addresses = rAddresses.getVO();
					_vo.company = rCompany.selectedItem;

					new CustomerCRUDEvent(CustomerCRUDEvent.SAVE_OR_UPDATE_EVENT,_vo).dispatch();
				}
			}
			
			private function cancel():void
			{
				new CustomerCRUDEvent(CustomerCRUDEvent.CANCEL_EVENT).dispatch();
			}

			private function doInit():void
			{		
                if (_model.callFromPop)
				{
					statePopup();
				}

				addEventListener(KeyboardEvent.KEY_UP,keyboardHandler,false,0,true);
				BindingUtils.bindSetter(changeState,_model,"editView");
				setFocus();
        	}
			
			override public function setFocus():void
			{
				if (fuPersonalPhoto)
					fuPersonalPhoto.setFocus();
			}
			
			private function statePopup():void
			{
				formContainer.styleName = "";
				formContainer.removeChild(lbCustomer);
				form.setStyle("paddingTop",0);
				form.setStyle("paddingBottom",10);
				form.setStyle("paddingLeft",0);
				form.setStyle("paddingRight",0);
				setStyle("paddingTop",2);
				setStyle("paddingBottom",10);
				setStyle("paddingLeft",10);
				setStyle("paddingRight",10);
			}

			private function keyboardHandler(e:KeyboardEvent):void
			{
				if (e.keyCode == Keyboard.ESCAPE)
					cancel();
				
				if (e.keyCode == Keyboard.F8)
					saveOrUpdate();
			}
				
			private function changeState(editView:Boolean):void
			{
				currentState = _model.state;
			}
				
		]]>
	</mx:Script>
	
	<mx:states>
		<mx:State name="createView">
	
		</mx:State>		
		<mx:State name="editView">

		</mx:State>
	</mx:states>
	
	<mx:Array id="validators">
		<mx:StringValidator source="{txtFirstName}" property="text" required="true"/>
		<mx:StringValidator source="{txtLastName}" property="text" required="true"/>
		<mx:EmailValidator source="{txtEmail}" property="text" required="false"/>
	</mx:Array>
	
	<mx:VBox id="formContainer" styleName="formContainer">
		<mx:Label text="{MultipleRM.getString(MultipleRM.localePrefix,'customer.label')}" styleName="titleForm" width="100%" id="lbCustomer"/>
		<mx:Form width="100%" id="form">
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.personalPhoto')}" id="fiPersonalPhoto" width="100%">
				<cubikalabs:CBKSnapshotUpload id="fuPersonalPhoto" url="fileUpload" filePath="{_model.selected.personalPhoto}" />
	 		</mx:FormItem>
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.firstName')}" id="fiFirstName" width="100%">
				<mx:TextInput id="txtFirstName" text="{_model.selected.firstName}" width="217"/>
	 		</mx:FormItem>
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.lastName')}" id="fiLastName" width="100%">
				<mx:TextInput id="txtLastName" text="{_model.selected.lastName}" width="217"/>
	 		</mx:FormItem>
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.email')}" id="fiEmail" width="100%">
				<mx:TextInput id="txtEmail" text="{_model.selected.email}" width="217"/>
	 		</mx:FormItem>
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.addresses')}" id="fiAddresses" width="100%">
				<addresses:AddressOneToManyListView id="rAddresses" dataProvider="{_model.selected.addresses}"/>
	 		</mx:FormItem>
	 		<mx:FormItem label="{MultipleRM.getString(MultipleRM.localePrefix,'customer.company')}" id="fiCompany" width="100%">
				<company:CompanyExternalManyToOneView id="rCompany" selectedItem="{_model.selected.company}"/>
	 		</mx:FormItem>
		</mx:Form>
				
		<mx:HBox width="100%" horizontalAlign="right">
			<mx:Button label="{MultipleRM.getString(MultipleRM.localePrefix,'generic.submit')} (F8)" click="saveOrUpdate()"/>
			<mx:Button label="{MultipleRM.getString(MultipleRM.localePrefix,'generic.cancel')} (ESC)" click="cancel()"/>
		</mx:HBox>
	</mx:VBox>

</mx:VBox>
